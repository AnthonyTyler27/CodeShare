{"id":"../node_modules/@mui/material/Hidden/HiddenJs.js","dependencies":[{"name":"C:\\Users\\Dell\\CodeShare\\package.json","includedInParent":true,"mtime":1686079759432},{"name":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Hidden\\package.json","includedInParent":true,"mtime":1685847523221},{"name":"react","loc":{"line":1,"column":23,"index":23},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Hidden\\HiddenJs.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\react\\index.js"},{"name":"prop-types","loc":{"line":2,"column":22,"index":54},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Hidden\\HiddenJs.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\prop-types\\index.js"},{"name":"@mui/utils","loc":{"line":3,"column":26,"index":94},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Hidden\\HiddenJs.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\utils\\esm\\index.js"},{"name":"./withWidth","loc":{"line":4,"column":50,"index":158},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Hidden\\HiddenJs.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Hidden\\withWidth.js"},{"name":"../styles/useTheme","loc":{"line":5,"column":21,"index":194},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Hidden\\HiddenJs.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\styles\\useTheme.js"},{"name":"react/jsx-runtime","loc":{"line":10,"column":28,"index":286},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Hidden\\HiddenJs.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\react\\jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _withWidth = _interopRequireWildcard(require(\"./withWidth\"));\n\nvar _useTheme = _interopRequireDefault(require(\"../styles/useTheme\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * @ignore - internal component.\n */\nfunction HiddenJs(props) {\n  const {\n    children,\n    only,\n    width\n  } = props;\n  const theme = (0, _useTheme.default)();\n  let visible = true; // `only` check is faster to get out sooner if used.\n\n  if (only) {\n    if (Array.isArray(only)) {\n      for (let i = 0; i < only.length; i += 1) {\n        const breakpoint = only[i];\n\n        if (width === breakpoint) {\n          visible = false;\n          break;\n        }\n      }\n    } else if (only && width === only) {\n      visible = false;\n    }\n  } // Allow `only` to be combined with other props. If already hidden, no need to check others.\n\n\n  if (visible) {\n    // determine visibility based on the smallest size up\n    for (let i = 0; i < theme.breakpoints.keys.length; i += 1) {\n      const breakpoint = theme.breakpoints.keys[i];\n      const breakpointUp = props[`${breakpoint}Up`];\n      const breakpointDown = props[`${breakpoint}Down`];\n\n      if (breakpointUp && (0, _withWidth.isWidthUp)(breakpoint, width) || breakpointDown && (0, _withWidth.isWidthDown)(breakpoint, width)) {\n        visible = false;\n        break;\n      }\n    }\n  }\n\n  if (!visible) {\n    return null;\n  }\n\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(React.Fragment, {\n    children: children\n  });\n}\n\n\"development\" !== \"production\" ? HiddenJs.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  lgDown: _propTypes.default.bool,\n\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  lgUp: _propTypes.default.bool,\n\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  mdDown: _propTypes.default.bool,\n\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  mdUp: _propTypes.default.bool,\n\n  /**\n   * Hide the given breakpoint(s).\n   */\n  only: _propTypes.default.oneOfType([_propTypes.default.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), _propTypes.default.arrayOf(_propTypes.default.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),\n\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  smDown: _propTypes.default.bool,\n\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  smUp: _propTypes.default.bool,\n\n  /**\n   * @ignore\n   * width prop provided by withWidth decorator.\n   */\n  width: _propTypes.default.string.isRequired,\n\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xlDown: _propTypes.default.bool,\n\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xlUp: _propTypes.default.bool,\n\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xsDown: _propTypes.default.bool,\n\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xsUp: _propTypes.default.bool\n} : void 0;\n\nif (\"development\" !== 'production') {\n  \"development\" !== \"production\" ? HiddenJs.propTypes = (0, _utils.exactProp)(HiddenJs.propTypes) : void 0;\n}\n\nvar _default = (0, _withWidth.default)()(HiddenJs);\n\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"e88e38427e829a9d6ff8f4588b71a7e0","cacheData":{"env":{"NODE_ENV":"development"}}}