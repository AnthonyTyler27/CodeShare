{"id":"../node_modules/@mui/system/esm/cssVars/createGetCssVar.js","dependencies":[{"name":"C:\\Users\\Dell\\CodeShare\\package.json","includedInParent":true,"mtime":1686079759432},{"name":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\system\\package.json","includedInParent":true,"mtime":1685847516748}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createGetCssVar;\n\n/**\n * The benefit of this function is to help developers get CSS var from theme without specifying the whole variable\n * and they does not need to remember the prefix (defined once).\n */\nfunction createGetCssVar() {\n  let prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  function appendVar() {\n    for (var _len = arguments.length, vars = new Array(_len), _key = 0; _key < _len; _key++) {\n      vars[_key] = arguments[_key];\n    }\n\n    if (!vars.length) {\n      return '';\n    }\n\n    const value = vars[0];\n\n    if (typeof value === 'string' && !value.match(/(#|\\(|\\)|(-?(\\d*\\.)?\\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\\d*\\.)?\\d+)$|(\\d+ \\d+ \\d+)/)) {\n      return `, var(--${prefix ? `${prefix}-` : ''}${value}${appendVar(...vars.slice(1))})`;\n    }\n\n    return `, ${value}`;\n  } // AdditionalVars makes `getCssVar` less strict, so it can be use like this `getCssVar('non-mui-variable')` without type error.\n\n\n  const getCssVar = function (field) {\n    for (var _len2 = arguments.length, fallbacks = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      fallbacks[_key2 - 1] = arguments[_key2];\n    }\n\n    return `var(--${prefix ? `${prefix}-` : ''}${field}${appendVar(...fallbacks)})`;\n  };\n\n  return getCssVar;\n}"},"sourceMaps":null,"error":null,"hash":"4bd35d82add908a90053dd094099f9ee","cacheData":{"env":{}}}