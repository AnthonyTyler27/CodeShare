{"id":"../node_modules/@mui/material/CssBaseline/CssBaseline.js","dependencies":[{"name":"C:\\Users\\Dell\\CodeShare\\package.json","includedInParent":true,"mtime":1686079759432},{"name":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\CssBaseline\\package.json","includedInParent":true,"mtime":1685847523182},{"name":"@babel/runtime/helpers/esm/extends","loc":{"line":1,"column":21,"index":21},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\CssBaseline\\CssBaseline.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@babel\\runtime\\helpers\\esm\\extends.js"},{"name":"react","loc":{"line":2,"column":23,"index":82},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\CssBaseline\\CssBaseline.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\react\\index.js"},{"name":"prop-types","loc":{"line":3,"column":22,"index":113},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\CssBaseline\\CssBaseline.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\prop-types\\index.js"},{"name":"../styles/useThemeProps","loc":{"line":4,"column":26,"index":153},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\CssBaseline\\CssBaseline.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\styles\\useThemeProps.js"},{"name":"../GlobalStyles","loc":{"line":5,"column":25,"index":205},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\CssBaseline\\CssBaseline.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\GlobalStyles\\index.js"},{"name":"react/jsx-runtime","loc":{"line":7,"column":30,"index":303},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\CssBaseline\\CssBaseline.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\react\\jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styles = exports.html = exports.default = exports.body = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _useThemeProps = _interopRequireDefault(require(\"../styles/useThemeProps\"));\n\nvar _GlobalStyles = _interopRequireDefault(require(\"../GlobalStyles\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst html = (theme, enableColorScheme) => (0, _extends2.default)({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\n\nexports.html = html;\n\nconst body = theme => (0, _extends2.default)({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\n\nexports.body = body;\n\nconst styles = (theme, enableColorScheme = false) => {\n  var _theme$components, _theme$components$Mui;\n\n  const colorSchemeStyles = {};\n\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n\n  let defaultStyles = (0, _extends2.default)({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: (0, _extends2.default)({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n\n  return defaultStyles;\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\n\nexports.styles = styles;\n\nfunction CssBaseline(inProps) {\n  const props = (0, _useThemeProps.default)({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_GlobalStyles.default, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\n\n\"development\" !== \"production\" ? CssBaseline.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: _propTypes.default.bool\n} : void 0;\nvar _default = CssBaseline;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"59eceba7cfc852af805676edd6d594dc","cacheData":{"env":{"NODE_ENV":"development"}}}