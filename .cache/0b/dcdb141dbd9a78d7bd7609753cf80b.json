{"id":"../node_modules/@mui/utils/esm/deepmerge.js","dependencies":[{"name":"C:\\Users\\Dell\\CodeShare\\package.json","includedInParent":true,"mtime":1686079759432},{"name":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\utils\\package.json","includedInParent":true,"mtime":1685847515858}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = deepmerge;\nexports.isPlainObject = isPlainObject;\n\nfunction isPlainObject(item) {\n  return item !== null && typeof item === 'object' && item.constructor === Object;\n}\n\nfunction deepClone(source) {\n  if (!isPlainObject(source)) {\n    return source;\n  }\n\n  const output = {};\n  Object.keys(source).forEach(key => {\n    output[key] = deepClone(source[key]);\n  });\n  return output;\n}\n\nfunction deepmerge(target, source) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    clone: true\n  };\n  const output = options.clone ? { ...target\n  } : target;\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else if (options.clone) {\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n\n  return output;\n}"},"sourceMaps":null,"error":null,"hash":"e9fce4828df7e36befa668ef6f4af3e5","cacheData":{"env":{}}}