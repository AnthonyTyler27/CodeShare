{"id":"components/FileBrowser.js","dependencies":[{"name":"C:\\Users\\Dell\\CodeShare\\package.json","includedInParent":true,"mtime":1686079759432},{"name":"react","loc":{"line":1,"column":43,"index":43},"parent":"C:\\Users\\Dell\\CodeShare\\src\\components\\FileBrowser.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\react\\index.js"},{"name":"@mui/lab/TreeView","loc":{"line":2,"column":21,"index":74},"parent":"C:\\Users\\Dell\\CodeShare\\src\\components\\FileBrowser.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\lab\\TreeView\\index.js"},{"name":"@mui/material","loc":{"line":3,"column":57,"index":153},"parent":"C:\\Users\\Dell\\CodeShare\\src\\components\\FileBrowser.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\index.js"},{"name":"@mui/icons-material","loc":{"line":4,"column":65,"index":236},"parent":"C:\\Users\\Dell\\CodeShare\\src\\components\\FileBrowser.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\icons-material\\esm\\index.js"},{"name":"../server/Posts","loc":{"line":5,"column":18,"index":278},"parent":"C:\\Users\\Dell\\CodeShare\\src\\components\\FileBrowser.js","resolved":"C:\\Users\\Dell\\CodeShare\\src\\server\\Posts.js"},{"name":"@mui/material/styles","loc":{"line":6,"column":43,"index":340},"parent":"C:\\Users\\Dell\\CodeShare\\src\\components\\FileBrowser.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\styles\\index.js"},{"name":"@mui/lab/TreeItem","loc":{"line":8,"column":21,"index":388},"parent":"C:\\Users\\Dell\\CodeShare\\src\\components\\FileBrowser.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\lab\\TreeItem\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = FileSystemNavigator;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _TreeView = _interopRequireDefault(require(\"@mui/lab/TreeView\"));\n\nvar _material = require(\"@mui/material\");\n\nvar _iconsMaterial = require(\"@mui/icons-material\");\n\nvar _Posts = _interopRequireDefault(require(\"../server/Posts\"));\n\nvar _styles = require(\"@mui/material/styles\");\n\nvar _TreeItem = _interopRequireDefault(require(\"@mui/lab/TreeItem\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// Create a light theme specifically for the TreeView component\nconst treeViewTheme = (0, _styles.createTheme)({\n  palette: {\n    type: 'light'\n  },\n  typography: {\n    fontFamily: 'Roboto Mono, monospace'\n  }\n});\nconst styles = {\n  grayBox: {\n    borderRadius: \"20px\",\n    border: 1,\n    borderColor: \"divider\",\n    backgroundColor: \"lightgray\",\n    boxShadow: \"4px 4px 0px 0px lightgray\",\n    height: \"100%\"\n  },\n  topBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid gray\",\n    borderRadius: \"0px\"\n  },\n  headerTextStyle: {\n    paddingLeft: \"10px\",\n    marginRight: \"auto\",\n    fontFamily: \"Roboto Mono, monospace\"\n  }\n};\n\nfunction FileSystemNavigator() {\n  const [data, setData] = (0, _react.useState)(null);\n  (0, _react.useEffect)(() => {\n    getFileFromServer();\n  }, []);\n\n  const getFileFromServer = async () => {\n    try {\n      const response = await fetch(_Posts.default.GETDIRECTORYSTRUCTURE, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const xdata = await response.json();\n      console.log(\"Received directory\");\n      console.log(xdata);\n      setData(xdata);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const sanitizeId = id => {\n    return id.replace(/[^\\w]/g, '_'); // Replace invalid characters with underscores\n  };\n\n  const renderTree = nodes => nodes == null ? /*#__PURE__*/_react.default.createElement(_TreeItem.default, {\n    key: sanitizeId(nodes.id),\n    nodeId: sanitizeId(nodes.id),\n    label: nodes.name\n  }, Array.isArray(nodes.children) ? nodes.children.map(node => renderTree(node)) : null) : null;\n\n  return /*#__PURE__*/_react.default.createElement(_styles.ThemeProvider, {\n    theme: treeViewTheme\n  }, /*#__PURE__*/_react.default.createElement(_material.Box, {\n    style: styles.grayBox\n  }, /*#__PURE__*/_react.default.createElement(_material.ButtonGroup, {\n    style: styles.topBox,\n    variant: \"outlined\"\n  }, /*#__PURE__*/_react.default.createElement(_material.Typography, {\n    variant: \"h5\",\n    style: styles.headerTextStyle\n  }, \"Files\"), /*#__PURE__*/_react.default.createElement(\"div\", null, /*#__PURE__*/_react.default.createElement(_material.IconButton, null, /*#__PURE__*/_react.default.createElement(_iconsMaterial.Add, null)), /*#__PURE__*/_react.default.createElement(_material.IconButton, null, /*#__PURE__*/_react.default.createElement(_iconsMaterial.CreateNewFolder, null)), /*#__PURE__*/_react.default.createElement(_material.IconButton, null, /*#__PURE__*/_react.default.createElement(_iconsMaterial.Upload, null)))), /*#__PURE__*/_react.default.createElement(_TreeView.default, {\n    \"aria-label\": \"rich object\",\n    defaultCollapseIcon: /*#__PURE__*/_react.default.createElement(_iconsMaterial.FolderOpen, null),\n    defaultExpanded: ['root'],\n    defaultExpandIcon: /*#__PURE__*/_react.default.createElement(_iconsMaterial.Folder, null),\n    sx: {\n      height: '100%',\n      width: 1,\n      overflowY: 'auto',\n      overflowX: 'hidden'\n    }\n  }, data != null ? renderTree(data) : /*#__PURE__*/_react.default.createElement(\"div\", null, \"No files available\"))));\n}"},"sourceMaps":null,"error":null,"hash":"2397f91d9f658fd32dd9496bfee2e7d6","cacheData":{"env":{}}}