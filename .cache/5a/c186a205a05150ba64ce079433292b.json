{"id":"../node_modules/@mui/system/esm/cssVars/prepareCssVars.js","dependencies":[{"name":"C:\\Users\\Dell\\CodeShare\\package.json","includedInParent":true,"mtime":1686079759432},{"name":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\system\\package.json","includedInParent":true,"mtime":1685847516748},{"name":"@babel/runtime/helpers/esm/extends","loc":{"line":1,"column":21,"index":21},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\system\\esm\\cssVars\\prepareCssVars.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@babel\\runtime\\helpers\\esm\\extends.js"},{"name":"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose","loc":{"line":2,"column":42,"index":101},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\system\\esm\\cssVars\\prepareCssVars.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@babel\\runtime\\helpers\\esm\\objectWithoutPropertiesLoose.js"},{"name":"@mui/utils","loc":{"line":5,"column":26,"index":262},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\system\\esm\\cssVars\\prepareCssVars.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\utils\\esm\\index.js"},{"name":"./cssVarsParser","loc":{"line":6,"column":26,"index":302},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\system\\esm\\cssVars\\prepareCssVars.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\system\\esm\\cssVars\\cssVarsParser.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _cssVarsParser = _interopRequireDefault(require(\"./cssVarsParser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst _excluded = [\"colorSchemes\", \"components\"],\n      _excluded2 = [\"light\"];\n\nfunction prepareCssVars(theme, parserConfig) {\n  // @ts-ignore - ignore components do not exist\n  const {\n    colorSchemes = {}\n  } = theme,\n        otherTheme = (0, _objectWithoutPropertiesLoose2.default)(theme, _excluded);\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = (0, _cssVarsParser.default)(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n    light\n  } = colorSchemes,\n        otherColorSchemes = (0, _objectWithoutPropertiesLoose2.default)(colorSchemes, _excluded2);\n  Object.entries(otherColorSchemes || {}).forEach(_ref => {\n    let [key, scheme] = _ref;\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = (0, _cssVarsParser.default)(scheme, parserConfig);\n    themeVars = (0, _utils.deepmerge)(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n\n  if (light) {\n    // light color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = (0, _cssVarsParser.default)(light, parserConfig);\n    themeVars = (0, _utils.deepmerge)(themeVars, varsWithDefaults);\n    colorSchemesMap.light = {\n      css,\n      vars\n    };\n  }\n\n  const generateCssVars = colorScheme => {\n    if (!colorScheme) {\n      return {\n        css: (0, _extends2.default)({}, rootCss),\n        vars: rootVars\n      };\n    }\n\n    return {\n      css: (0, _extends2.default)({}, colorSchemesMap[colorScheme].css),\n      vars: colorSchemesMap[colorScheme].vars\n    };\n  };\n\n  return {\n    vars: themeVars,\n    generateCssVars\n  };\n}\n\nvar _default = prepareCssVars;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"f30a16cda8074fc5188efd89935a3be3","cacheData":{"env":{}}}