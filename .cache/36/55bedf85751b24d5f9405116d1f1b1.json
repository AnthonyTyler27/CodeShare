{"id":"../node_modules/@mui/material/Rating/Rating.js","dependencies":[{"name":"C:\\Users\\Dell\\CodeShare\\package.json","includedInParent":true,"mtime":1686079759432},{"name":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\package.json","includedInParent":true,"mtime":1685847523300},{"name":"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose","loc":{"line":1,"column":42,"index":42},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\Rating.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@babel\\runtime\\helpers\\esm\\objectWithoutPropertiesLoose.js"},{"name":"@babel/runtime/helpers/esm/extends","loc":{"line":2,"column":21,"index":122},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\Rating.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@babel\\runtime\\helpers\\esm\\extends.js"},{"name":"react","loc":{"line":5,"column":23,"index":494},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\Rating.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\react\\index.js"},{"name":"prop-types","loc":{"line":6,"column":22,"index":525},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\Rating.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\prop-types\\index.js"},{"name":"clsx","loc":{"line":7,"column":17,"index":556},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\Rating.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\clsx\\dist\\clsx.m.js"},{"name":"@mui/utils","loc":{"line":8,"column":47,"index":611},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\Rating.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\utils\\esm\\index.js"},{"name":"@mui/base","loc":{"line":9,"column":58,"index":683},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\Rating.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\base\\index.js"},{"name":"../styles/useTheme","loc":{"line":10,"column":21,"index":717},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\Rating.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\styles\\useTheme.js"},{"name":"../utils","loc":{"line":11,"column":98,"index":837},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\Rating.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\utils\\index.js"},{"name":"../internal/svg-icons/Star","loc":{"line":12,"column":17,"index":866},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\Rating.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\internal\\svg-icons\\Star.js"},{"name":"../internal/svg-icons/StarBorder","loc":{"line":13,"column":23,"index":919},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\Rating.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\internal\\svg-icons\\StarBorder.js"},{"name":"../styles/useThemeProps","loc":{"line":14,"column":26,"index":981},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\Rating.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\styles\\useThemeProps.js"},{"name":"../styles/styled","loc":{"line":15,"column":46,"index":1054},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\Rating.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\styles\\styled.js"},{"name":"./ratingClasses","loc":{"line":16,"column":53,"index":1127},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\Rating.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\ratingClasses.js"},{"name":"react/jsx-runtime","loc":{"line":18,"column":30,"index":1225},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Rating\\Rating.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\react\\jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _base = require(\"@mui/base\");\n\nvar _useTheme = _interopRequireDefault(require(\"../styles/useTheme\"));\n\nvar _utils2 = require(\"../utils\");\n\nvar _Star = _interopRequireDefault(require(\"../internal/svg-icons/Star\"));\n\nvar _StarBorder = _interopRequireDefault(require(\"../internal/svg-icons/StarBorder\"));\n\nvar _useThemeProps = _interopRequireDefault(require(\"../styles/useThemeProps\"));\n\nvar _styled = _interopRequireWildcard(require(\"../styles/styled\"));\n\nvar _ratingClasses = _interopRequireWildcard(require(\"./ratingClasses\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst _excluded = [\"value\"],\n      _excluded2 = [\"className\", \"defaultValue\", \"disabled\", \"emptyIcon\", \"emptyLabelText\", \"getLabelText\", \"highlightSelectedOnly\", \"icon\", \"IconContainerComponent\", \"max\", \"name\", \"onChange\", \"onChangeActive\", \"onMouseLeave\", \"onMouseMove\", \"precision\", \"readOnly\", \"size\", \"value\"];\n\nfunction clamp(value, min, max) {\n  if (value < min) {\n    return min;\n  }\n\n  if (value > max) {\n    return max;\n  }\n\n  return value;\n}\n\nfunction getDecimalPrecision(num) {\n  const decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\n\nfunction roundValueToPrecision(value, precision) {\n  if (value == null) {\n    return value;\n  }\n\n  const nearest = Math.round(value / precision) * precision;\n  return Number(nearest.toFixed(getDecimalPrecision(precision)));\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    size,\n    readOnly,\n    disabled,\n    emptyValueFocused,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', `size${(0, _utils2.capitalize)(size)}`, disabled && 'disabled', focusVisible && 'focusVisible', readOnly && 'readOnly'],\n    label: ['label', 'pristine'],\n    labelEmptyValue: [emptyValueFocused && 'labelEmptyValueActive'],\n    icon: ['icon'],\n    iconEmpty: ['iconEmpty'],\n    iconFilled: ['iconFilled'],\n    iconHover: ['iconHover'],\n    iconFocus: ['iconFocus'],\n    iconActive: ['iconActive'],\n    decimal: ['decimal'],\n    visuallyHidden: ['visuallyHidden']\n  };\n  return (0, _base.unstable_composeClasses)(slots, _ratingClasses.getRatingUtilityClass, classes);\n};\n\nconst RatingRoot = (0, _styled.default)('span', {\n  name: 'MuiRating',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${_ratingClasses.default.visuallyHidden}`]: styles.visuallyHidden\n    }, styles.root, styles[`size${(0, _utils2.capitalize)(ownerState.size)}`], ownerState.readOnly && styles.readOnly];\n  }\n})(({\n  theme,\n  ownerState\n}) => (0, _extends2.default)({\n  display: 'inline-flex',\n  // Required to position the pristine input absolutely\n  position: 'relative',\n  fontSize: theme.typography.pxToRem(24),\n  color: '#faaf00',\n  cursor: 'pointer',\n  textAlign: 'left',\n  WebkitTapHighlightColor: 'transparent',\n  [`&.${_ratingClasses.default.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity,\n    pointerEvents: 'none'\n  },\n  [`&.${_ratingClasses.default.focusVisible} .${_ratingClasses.default.iconActive}`]: {\n    outline: '1px solid #999'\n  },\n  [`& .${_ratingClasses.default.visuallyHidden}`]: _utils.visuallyHidden\n}, ownerState.size === 'small' && {\n  fontSize: theme.typography.pxToRem(18)\n}, ownerState.size === 'large' && {\n  fontSize: theme.typography.pxToRem(30)\n}, ownerState.readOnly && {\n  pointerEvents: 'none'\n}));\nconst RatingLabel = (0, _styled.default)('label', {\n  name: 'MuiRating',\n  slot: 'Label',\n  overridesResolver: ({\n    ownerState\n  }, styles) => [styles.label, ownerState.emptyValueFocused && styles.labelEmptyValueActive]\n})(({\n  ownerState\n}) => (0, _extends2.default)({\n  cursor: 'inherit'\n}, ownerState.emptyValueFocused && {\n  top: 0,\n  bottom: 0,\n  position: 'absolute',\n  outline: '1px solid #999',\n  width: '100%'\n}));\nconst RatingIcon = (0, _styled.default)('span', {\n  name: 'MuiRating',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, ownerState.iconEmpty && styles.iconEmpty, ownerState.iconFilled && styles.iconFilled, ownerState.iconHover && styles.iconHover, ownerState.iconFocus && styles.iconFocus, ownerState.iconActive && styles.iconActive];\n  }\n})(({\n  theme,\n  ownerState\n}) => (0, _extends2.default)({\n  // Fit wrapper to actual icon size.\n  display: 'flex',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n  // Fix mouseLeave issue.\n  // https://github.com/facebook/react/issues/4492\n  pointerEvents: 'none'\n}, ownerState.iconActive && {\n  transform: 'scale(1.2)'\n}, ownerState.iconEmpty && {\n  color: (theme.vars || theme).palette.action.disabled\n}));\nconst RatingDecimal = (0, _styled.default)('span', {\n  name: 'MuiRating',\n  slot: 'Decimal',\n  shouldForwardProp: prop => (0, _styled.slotShouldForwardProp)(prop) && prop !== 'iconActive',\n  overridesResolver: (props, styles) => {\n    const {\n      iconActive\n    } = props;\n    return [styles.decimal, iconActive && styles.iconActive];\n  }\n})(({\n  iconActive\n}) => (0, _extends2.default)({\n  position: 'relative'\n}, iconActive && {\n  transform: 'scale(1.2)'\n}));\n\nfunction IconContainer(props) {\n  const other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(\"span\", (0, _extends2.default)({}, other));\n}\n\n\"development\" !== \"production\" ? IconContainer.propTypes = {\n  value: _propTypes.default.number.isRequired\n} : void 0;\n\nfunction RatingItem(props) {\n  const {\n    classes,\n    disabled,\n    emptyIcon,\n    focus,\n    getLabelText,\n    highlightSelectedOnly,\n    hover,\n    icon,\n    IconContainerComponent,\n    isActive,\n    itemValue,\n    labelProps,\n    name,\n    onBlur,\n    onChange,\n    onClick,\n    onFocus,\n    readOnly,\n    ownerState,\n    ratingValue,\n    ratingValueRounded\n  } = props;\n  const isFilled = highlightSelectedOnly ? itemValue === ratingValue : itemValue <= ratingValue;\n  const isHovered = itemValue <= hover;\n  const isFocused = itemValue <= focus;\n  const isChecked = itemValue === ratingValueRounded;\n  const id = (0, _utils2.unstable_useId)();\n  const container = /*#__PURE__*/(0, _jsxRuntime.jsx)(RatingIcon, {\n    as: IconContainerComponent,\n    value: itemValue,\n    className: (0, _clsx.default)(classes.icon, isFilled ? classes.iconFilled : classes.iconEmpty, isHovered && classes.iconHover, isFocused && classes.iconFocus, isActive && classes.iconActive),\n    ownerState: (0, _extends2.default)({}, ownerState, {\n      iconEmpty: !isFilled,\n      iconFilled: isFilled,\n      iconHover: isHovered,\n      iconFocus: isFocused,\n      iconActive: isActive\n    }),\n    children: emptyIcon && !isFilled ? emptyIcon : icon\n  });\n\n  if (readOnly) {\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(\"span\", (0, _extends2.default)({}, labelProps, {\n      children: container\n    }));\n  }\n\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n    children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)(RatingLabel, (0, _extends2.default)({\n      ownerState: (0, _extends2.default)({}, ownerState, {\n        emptyValueFocused: undefined\n      }),\n      htmlFor: id\n    }, labelProps, {\n      children: [container, /*#__PURE__*/(0, _jsxRuntime.jsx)(\"span\", {\n        className: classes.visuallyHidden,\n        children: getLabelText(itemValue)\n      })]\n    })), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"input\", {\n      className: classes.visuallyHidden,\n      onFocus: onFocus,\n      onBlur: onBlur,\n      onChange: onChange,\n      onClick: onClick,\n      disabled: disabled,\n      value: itemValue,\n      id: id,\n      type: \"radio\",\n      name: name,\n      checked: isChecked\n    })]\n  });\n}\n\n\"development\" !== \"production\" ? RatingItem.propTypes = {\n  classes: _propTypes.default.object.isRequired,\n  disabled: _propTypes.default.bool.isRequired,\n  emptyIcon: _propTypes.default.node,\n  focus: _propTypes.default.number.isRequired,\n  getLabelText: _propTypes.default.func.isRequired,\n  highlightSelectedOnly: _propTypes.default.bool.isRequired,\n  hover: _propTypes.default.number.isRequired,\n  icon: _propTypes.default.node,\n  IconContainerComponent: _propTypes.default.elementType.isRequired,\n  isActive: _propTypes.default.bool.isRequired,\n  itemValue: _propTypes.default.number.isRequired,\n  labelProps: _propTypes.default.object,\n  name: _propTypes.default.string,\n  onBlur: _propTypes.default.func.isRequired,\n  onChange: _propTypes.default.func.isRequired,\n  onClick: _propTypes.default.func.isRequired,\n  onFocus: _propTypes.default.func.isRequired,\n  ownerState: _propTypes.default.object.isRequired,\n  ratingValue: _propTypes.default.number,\n  ratingValueRounded: _propTypes.default.number,\n  readOnly: _propTypes.default.bool.isRequired\n} : void 0;\nconst defaultIcon = /*#__PURE__*/(0, _jsxRuntime.jsx)(_Star.default, {\n  fontSize: \"inherit\"\n});\nconst defaultEmptyIcon = /*#__PURE__*/(0, _jsxRuntime.jsx)(_StarBorder.default, {\n  fontSize: \"inherit\"\n});\n\nfunction defaultLabelText(value) {\n  return `${value} Star${value !== 1 ? 's' : ''}`;\n}\n\nconst Rating = /*#__PURE__*/React.forwardRef(function Rating(inProps, ref) {\n  const props = (0, _useThemeProps.default)({\n    name: 'MuiRating',\n    props: inProps\n  });\n  const {\n    className,\n    defaultValue = null,\n    disabled = false,\n    emptyIcon = defaultEmptyIcon,\n    emptyLabelText = 'Empty',\n    getLabelText = defaultLabelText,\n    highlightSelectedOnly = false,\n    icon = defaultIcon,\n    IconContainerComponent = IconContainer,\n    max = 5,\n    name: nameProp,\n    onChange,\n    onChangeActive,\n    onMouseLeave,\n    onMouseMove,\n    precision = 1,\n    readOnly = false,\n    size = 'medium',\n    value: valueProp\n  } = props,\n        other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded2);\n  const name = (0, _utils2.unstable_useId)(nameProp);\n  const [valueDerived, setValueState] = (0, _utils2.useControlled)({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Rating'\n  });\n  const valueRounded = roundValueToPrecision(valueDerived, precision);\n  const theme = (0, _useTheme.default)();\n  const [{\n    hover,\n    focus\n  }, setState] = React.useState({\n    hover: -1,\n    focus: -1\n  });\n  let value = valueRounded;\n\n  if (hover !== -1) {\n    value = hover;\n  }\n\n  if (focus !== -1) {\n    value = focus;\n  }\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = (0, _utils2.useIsFocusVisible)();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const rootRef = React.useRef();\n  const handleRef = (0, _utils2.useForkRef)(focusVisibleRef, rootRef, ref);\n\n  const handleMouseMove = event => {\n    if (onMouseMove) {\n      onMouseMove(event);\n    }\n\n    const rootNode = rootRef.current;\n    const {\n      right,\n      left\n    } = rootNode.getBoundingClientRect();\n    const {\n      width\n    } = rootNode.firstChild.getBoundingClientRect();\n    let percent;\n\n    if (theme.direction === 'rtl') {\n      percent = (right - event.clientX) / (width * max);\n    } else {\n      percent = (event.clientX - left) / (width * max);\n    }\n\n    let newHover = roundValueToPrecision(max * percent + precision / 2, precision);\n    newHover = clamp(newHover, precision, max);\n    setState(prev => prev.hover === newHover && prev.focus === newHover ? prev : {\n      hover: newHover,\n      focus: newHover\n    });\n    setFocusVisible(false);\n\n    if (onChangeActive && hover !== newHover) {\n      onChangeActive(event, newHover);\n    }\n  };\n\n  const handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    const newHover = -1;\n    setState({\n      hover: newHover,\n      focus: newHover\n    });\n\n    if (onChangeActive && hover !== newHover) {\n      onChangeActive(event, newHover);\n    }\n  };\n\n  const handleChange = event => {\n    let newValue = event.target.value === '' ? null : parseFloat(event.target.value); // Give mouse priority over keyboard\n    // Fix https://github.com/mui/material-ui/issues/22827\n\n    if (hover !== -1) {\n      newValue = hover;\n    }\n\n    setValueState(newValue);\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n  };\n\n  const handleClear = event => {\n    // Ignore keyboard events\n    // https://github.com/facebook/react/issues/7407\n    if (event.clientX === 0 && event.clientY === 0) {\n      return;\n    }\n\n    setState({\n      hover: -1,\n      focus: -1\n    });\n    setValueState(null);\n\n    if (onChange && parseFloat(event.target.value) === valueRounded) {\n      onChange(event, null);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    const newFocus = parseFloat(event.target.value);\n    setState(prev => ({\n      hover: prev.hover,\n      focus: newFocus\n    }));\n  };\n\n  const handleBlur = event => {\n    if (hover !== -1) {\n      return;\n    }\n\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    const newFocus = -1;\n    setState(prev => ({\n      hover: prev.hover,\n      focus: newFocus\n    }));\n  };\n\n  const [emptyValueFocused, setEmptyValueFocused] = React.useState(false);\n  const ownerState = (0, _extends2.default)({}, props, {\n    defaultValue,\n    disabled,\n    emptyIcon,\n    emptyLabelText,\n    emptyValueFocused,\n    focusVisible,\n    getLabelText,\n    icon,\n    IconContainerComponent,\n    max,\n    precision,\n    readOnly,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(RatingRoot, (0, _extends2.default)({\n    ref: handleRef,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave,\n    className: (0, _clsx.default)(classes.root, className, readOnly && 'MuiRating-readOnly'),\n    ownerState: ownerState,\n    role: readOnly ? 'img' : null,\n    \"aria-label\": readOnly ? getLabelText(value) : null\n  }, other, {\n    children: [Array.from(new Array(max)).map((_, index) => {\n      const itemValue = index + 1;\n      const ratingItemProps = {\n        classes,\n        disabled,\n        emptyIcon,\n        focus,\n        getLabelText,\n        highlightSelectedOnly,\n        hover,\n        icon,\n        IconContainerComponent,\n        name,\n        onBlur: handleBlur,\n        onChange: handleChange,\n        onClick: handleClear,\n        onFocus: handleFocus,\n        ratingValue: value,\n        ratingValueRounded: valueRounded,\n        readOnly,\n        ownerState\n      };\n      const isActive = itemValue === Math.ceil(value) && (hover !== -1 || focus !== -1);\n\n      if (precision < 1) {\n        const items = Array.from(new Array(1 / precision));\n        return /*#__PURE__*/(0, _jsxRuntime.jsx)(RatingDecimal, {\n          className: (0, _clsx.default)(classes.decimal, isActive && classes.iconActive),\n          ownerState: ownerState,\n          iconActive: isActive,\n          children: items.map(($, indexDecimal) => {\n            const itemDecimalValue = roundValueToPrecision(itemValue - 1 + (indexDecimal + 1) * precision, precision);\n            return /*#__PURE__*/(0, _jsxRuntime.jsx)(RatingItem, (0, _extends2.default)({}, ratingItemProps, {\n              // The icon is already displayed as active\n              isActive: false,\n              itemValue: itemDecimalValue,\n              labelProps: {\n                style: items.length - 1 === indexDecimal ? {} : {\n                  width: itemDecimalValue === value ? `${(indexDecimal + 1) * precision * 100}%` : '0%',\n                  overflow: 'hidden',\n                  position: 'absolute'\n                }\n              }\n            }), itemDecimalValue);\n          })\n        }, itemValue);\n      }\n\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(RatingItem, (0, _extends2.default)({}, ratingItemProps, {\n        isActive: isActive,\n        itemValue: itemValue\n      }), itemValue);\n    }), !readOnly && !disabled && /*#__PURE__*/(0, _jsxRuntime.jsxs)(RatingLabel, {\n      className: (0, _clsx.default)(classes.label, classes.labelEmptyValue),\n      ownerState: ownerState,\n      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(\"input\", {\n        className: classes.visuallyHidden,\n        value: \"\",\n        id: `${name}-empty`,\n        type: \"radio\",\n        name: name,\n        checked: valueRounded == null,\n        onFocus: () => setEmptyValueFocused(true),\n        onBlur: () => setEmptyValueFocused(false),\n        onChange: handleChange\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"span\", {\n        className: classes.visuallyHidden,\n        children: emptyLabelText\n      })]\n    })]\n  }));\n});\n\"development\" !== \"production\" ? Rating.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default null\n   */\n  defaultValue: _propTypes.default.number,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * The icon to display when empty.\n   * @default <StarBorder fontSize=\"inherit\" />\n   */\n  emptyIcon: _propTypes.default.node,\n\n  /**\n   * The label read when the rating input is empty.\n   * @default 'Empty'\n   */\n  emptyLabelText: _propTypes.default.node,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the rating.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {number} value The rating label's value to format.\n   * @returns {string}\n   * @default function defaultLabelText(value) {\n   *   return `${value} Star${value !== 1 ? 's' : ''}`;\n   * }\n   */\n  getLabelText: _propTypes.default.func,\n\n  /**\n   * If `true`, only the selected icon will be highlighted.\n   * @default false\n   */\n  highlightSelectedOnly: _propTypes.default.bool,\n\n  /**\n   * The icon to display.\n   * @default <Star fontSize=\"inherit\" />\n   */\n  icon: _propTypes.default.node,\n\n  /**\n   * The component containing the icon.\n   * @default function IconContainer(props) {\n   *   const { value, ...other } = props;\n   *   return <span {...other} />;\n   * }\n   */\n  IconContainerComponent: _propTypes.default.elementType,\n\n  /**\n   * Maximum rating.\n   * @default 5\n   */\n  max: _propTypes.default.number,\n\n  /**\n   * The name attribute of the radio `input` elements.\n   * This input `name` should be unique within the page.\n   * Being unique within a form is insufficient since the `name` is used to generated IDs.\n   */\n  name: _propTypes.default.string,\n\n  /**\n   * Callback fired when the value changes.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {number|null} value The new value.\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * Callback function that is fired when the hover state changes.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {number} value The new value.\n   */\n  onChangeActive: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onMouseMove: _propTypes.default.func,\n\n  /**\n   * The minimum increment value change allowed.\n   * @default 1\n   */\n  precision: (0, _utils.chainPropTypes)(_propTypes.default.number, props => {\n    if (props.precision < 0.1) {\n      return new Error(['MUI: The prop `precision` should be above 0.1.', 'A value below this limit has an imperceptible impact.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Removes all hover effects and pointer events.\n   * @default false\n   */\n  readOnly: _propTypes.default.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([_propTypes.default.oneOf(['small', 'medium', 'large']), _propTypes.default.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object, _propTypes.default.bool])), _propTypes.default.func, _propTypes.default.object]),\n\n  /**\n   * The rating value.\n   */\n  value: _propTypes.default.number\n} : void 0;\nvar _default = Rating;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"df789256967cdab77a1b04cd9abf5af2","cacheData":{"env":{"NODE_ENV":"development"}}}