{"id":"../node_modules/@mui/utils/esm/composeClasses/composeClasses.js","dependencies":[{"name":"C:\\Users\\Dell\\CodeShare\\package.json","includedInParent":true,"mtime":1686079759432},{"name":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\utils\\package.json","includedInParent":true,"mtime":1685847515858}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = composeClasses;\n\nfunction composeClasses(slots, getUtilityClass) {\n  let classes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  const output = {};\n  Object.keys(slots).forEach( // `Objet.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        const utilityClass = getUtilityClass(key);\n\n        if (utilityClass !== '') {\n          acc.push(utilityClass);\n        }\n\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n      }\n\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}"},"sourceMaps":null,"error":null,"hash":"73a97dd9f05a7335150db1d669bd5d7c","cacheData":{"env":{}}}