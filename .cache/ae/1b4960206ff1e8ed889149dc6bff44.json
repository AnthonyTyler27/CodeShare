{"id":"../node_modules/@mui/material/AvatarGroup/AvatarGroup.js","dependencies":[{"name":"C:\\Users\\Dell\\CodeShare\\package.json","includedInParent":true,"mtime":1686079759432},{"name":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\AvatarGroup\\package.json","includedInParent":true,"mtime":1685847523139},{"name":"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose","loc":{"line":1,"column":42,"index":42},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\AvatarGroup\\AvatarGroup.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@babel\\runtime\\helpers\\esm\\objectWithoutPropertiesLoose.js"},{"name":"@babel/runtime/helpers/esm/extends","loc":{"line":2,"column":21,"index":122},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\AvatarGroup\\AvatarGroup.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@babel\\runtime\\helpers\\esm\\extends.js"},{"name":"react","loc":{"line":4,"column":23,"index":311},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\AvatarGroup\\AvatarGroup.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\react\\index.js"},{"name":"prop-types","loc":{"line":5,"column":22,"index":342},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\AvatarGroup\\AvatarGroup.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\prop-types\\index.js"},{"name":"react-is","loc":{"line":6,"column":27,"index":383},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\AvatarGroup\\AvatarGroup.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\node_modules\\react-is\\index.js"},{"name":"clsx","loc":{"line":7,"column":17,"index":412},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\AvatarGroup\\AvatarGroup.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\clsx\\dist\\clsx.m.js"},{"name":"@mui/utils","loc":{"line":8,"column":31,"index":451},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\AvatarGroup\\AvatarGroup.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\utils\\esm\\index.js"},{"name":"@mui/base","loc":{"line":9,"column":58,"index":523},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\AvatarGroup\\AvatarGroup.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\base\\index.js"},{"name":"../styles/styled","loc":{"line":10,"column":19,"index":555},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\AvatarGroup\\AvatarGroup.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\styles\\styled.js"},{"name":"../styles/useThemeProps","loc":{"line":11,"column":26,"index":601},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\AvatarGroup\\AvatarGroup.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\styles\\useThemeProps.js"},{"name":"../Avatar","loc":{"line":12,"column":38,"index":666},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\AvatarGroup\\AvatarGroup.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\Avatar\\index.js"},{"name":"./avatarGroupClasses","loc":{"line":13,"column":63,"index":742},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\AvatarGroup\\AvatarGroup.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\AvatarGroup\\avatarGroupClasses.js"},{"name":"react/jsx-runtime","loc":{"line":14,"column":30,"index":796},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\@mui\\material\\AvatarGroup\\AvatarGroup.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\react\\jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIs = require(\"react-is\");\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _base = require(\"@mui/base\");\n\nvar _styled = _interopRequireDefault(require(\"../styles/styled\"));\n\nvar _useThemeProps = _interopRequireDefault(require(\"../styles/useThemeProps\"));\n\nvar _Avatar = _interopRequireWildcard(require(\"../Avatar\"));\n\nvar _avatarGroupClasses = _interopRequireWildcard(require(\"./avatarGroupClasses\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return (0, _base.unstable_composeClasses)(slots, _avatarGroupClasses.getAvatarGroupUtilityClass, classes);\n};\n\nconst AvatarGroupRoot = (0, _styled.default)('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => (0, _extends2.default)({\n    [`& .${_avatarGroupClasses.default.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme\n}) => ({\n  [`& .${_Avatar.avatarClasses.root}`]: {\n    border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  },\n  display: 'flex',\n  flexDirection: 'row-reverse'\n}));\nconst AvatarGroupAvatar = (0, _styled.default)(_Avatar.default, {\n  name: 'MuiAvatarGroup',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})(({\n  theme\n}) => ({\n  border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n  boxSizing: 'content-box',\n  marginLeft: -8,\n  '&:last-child': {\n    marginLeft: 0\n  }\n}));\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _slotProps$additional;\n\n  const props = (0, _useThemeProps.default)({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n  const {\n    children: childrenProp,\n    className,\n    component = 'div',\n    componentsProps = {},\n    max = 5,\n    slotProps = {},\n    spacing = 'medium',\n    total,\n    variant = 'circular'\n  } = props,\n        other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);\n  let clampedMax = max < 2 ? 2 : max;\n  const ownerState = (0, _extends2.default)({}, props, {\n    max,\n    spacing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (\"development\" !== 'production') {\n      if ((0, _reactIs.isFragment)(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(AvatarGroupRoot, (0, _extends2.default)({\n    as: component,\n    ownerState: ownerState,\n    className: (0, _clsx.default)(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/(0, _jsxRuntime.jsxs)(AvatarGroupAvatar, (0, _extends2.default)({\n      ownerState: ownerState,\n      variant: variant\n    }, additionalAvatarSlotProps, {\n      className: (0, _clsx.default)(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\n      style: (0, _extends2.default)({\n        marginLeft\n      }, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.style),\n      children: [\"+\", extraAvatars]\n    })) : null, children.slice(0, maxAvatars).reverse().map((child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: (0, _clsx.default)(child.props.className, classes.avatar),\n        style: (0, _extends2.default)({\n          // Consistent with \"&:last-child\" styling for the default spacing,\n          // we do not apply custom marginLeft spacing on the last child\n          marginLeft: index === maxAvatars - 1 ? undefined : marginLeft\n        }, child.props.style),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\n\"development\" !== \"production\" ? AvatarGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: _propTypes.default.elementType,\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: _propTypes.default.shape({\n    additionalAvatar: _propTypes.default.object\n  }),\n\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: (0, _utils.chainPropTypes)(_propTypes.default.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: _propTypes.default.shape({\n    additionalAvatar: _propTypes.default.object\n  }),\n\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: _propTypes.default.oneOfType([_propTypes.default.oneOf(['medium', 'small']), _propTypes.default.number]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object, _propTypes.default.bool])), _propTypes.default.func, _propTypes.default.object]),\n\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: _propTypes.default.number,\n\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([_propTypes.default.oneOf(['circular', 'rounded', 'square']), _propTypes.default.string])\n} : void 0;\nvar _default = AvatarGroup;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"a4a40cfbe32e5537f2ebc48b0741d052","cacheData":{"env":{"NODE_ENV":"development"}}}