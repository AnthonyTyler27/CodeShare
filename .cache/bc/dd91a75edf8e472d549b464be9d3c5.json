{"id":"node_modules/split-ca/index.js","dependencies":[{"name":"C:\\Users\\Dell\\CodeShare\\package.json","includedInParent":true,"mtime":1686079086368},{"name":"C:\\Users\\Dell\\CodeShare\\node_modules\\split-ca\\package.json","includedInParent":true,"mtime":1685547194663},{"name":"fs","loc":{"line":1,"column":17,"index":17},"parent":"C:\\Users\\Dell\\CodeShare\\node_modules\\split-ca\\index.js","resolved":"C:\\Users\\Dell\\CodeShare\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"}],"generated":{"js":"var fs = require('fs');\n\nmodule.exports = function (filepath, split, encoding) {\n  split = typeof split !== 'undefined' ? split : \"\\n\";\n  encoding = typeof encoding !== 'undefined' ? encoding : \"utf8\";\n\n  var ca = [];\n  var chain = fs.readFileSync(filepath, encoding);\n  if(chain.indexOf(\"-END CERTIFICATE-\") < 0 || chain.indexOf(\"-BEGIN CERTIFICATE-\") < 0){\n    throw Error(\"File does not contain 'BEGIN CERTIFICATE' or 'END CERTIFICATE'\");\n  }\n  chain = chain.split(split);\n  var cert = [];\n  var _i, _len;\n  for (_i = 0, _len = chain.length; _i < _len; _i++) {\n    var line = chain[_i];\n    if (!(line.length !== 0)) {\n      continue;\n    }\n    cert.push(line);\n    if (line.match(/-END CERTIFICATE-/)) {\n      ca.push(cert.join(split));\n      cert = [];\n    }\n  }\n  return ca;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/split-ca/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/split-ca/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"node_modules/split-ca/index.js":"var fs = require('fs');\n\nmodule.exports = function (filepath, split, encoding) {\n  split = typeof split !== 'undefined' ? split : \"\\n\";\n  encoding = typeof encoding !== 'undefined' ? encoding : \"utf8\";\n\n  var ca = [];\n  var chain = fs.readFileSync(filepath, encoding);\n  if(chain.indexOf(\"-END CERTIFICATE-\") < 0 || chain.indexOf(\"-BEGIN CERTIFICATE-\") < 0){\n    throw Error(\"File does not contain 'BEGIN CERTIFICATE' or 'END CERTIFICATE'\");\n  }\n  chain = chain.split(split);\n  var cert = [];\n  var _i, _len;\n  for (_i = 0, _len = chain.length; _i < _len; _i++) {\n    var line = chain[_i];\n    if (!(line.length !== 0)) {\n      continue;\n    }\n    cert.push(line);\n    if (line.match(/-END CERTIFICATE-/)) {\n      ca.push(cert.join(split));\n      cert = [];\n    }\n  }\n  return ca;\n}\n"},"lineCount":28}},"error":null,"hash":"a06a22a32bed6fb2eb863f18fa6d2f4e","cacheData":{"env":{}}}